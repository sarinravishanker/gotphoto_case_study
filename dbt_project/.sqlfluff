[sqlfluff]
# verbose is an integer (0-2) indicating the level of log output
verbose = 0

max_line_length = 150

# Turn off color formatting of output
nocolor = False

# Supported dialects https://docs.sqlfluff.com/en/stable/dialects.html
# Or run 'sqlfluff dialects'
dialect = snowflake

# One of [raw|jinja|python|placeholder|dbt]
templater = dbt
# The dbt templater is not working for whatever reason, but we have no need of it for now anyway.

exclude_rules = L026,L027,L028,L031,L032,L034,L035,L037,L042,L043,L051,L054,L059
# L026 - BigQuery uses STRUCTS which can look like incorrect table references
# L027 - Asks for qualified columns for ambiguous ones, but we not qualify our columns, and they are not really ambiguous (or BigQuery would complain)
# L028 - single table don't require alias to be maintained as they are self explanatory
# L031 - Avoid aliases in from and join.
# L032 - Uses joins instead of USING.
# L034 - Select wildcards then simple targets before calculations and aggregates. Usually the order of the columns is meaningful to the business, so we don't want to change it.
# L035 - Do not use ELSE NULL as redundant.
# L037 - if using DESC in one ORDER BY column, then insist on ASC/DESC for all.
# L042 - Use CTEs instead of subqueries. We don't use this consistently and big rewrite to do that.
# L043 - Use coalesce instead of case if you can.
# L051 - INNER JOIN must be fully qualified. Probably should use this but not our style.
# L054 - We want to allow ORDER BY statement to use explicit column names instead of order numbers within aggregate functions, this rule does not allow that. The doc claims that "ORDER BY clauses from WINDOW clauses are ignored by this rule." but this is either only something that changed in the newer versions of sqlfluff or it doesn't apply to agg functions called without a window clause.
# L059 - We want to allow camelCase column names when required by business. They have to be quoted to satisfy L014. This rule does not allow quoting identifiers that are non-reserved words.

# The depth to recursively parse to (0 for unlimited)
#recurse = 0

# Set either to 0 to disable.
large_file_skip_byte_limit = 0

# Below controls SQLFluff output, see max_line_length for SQL output
output_line_length = 80

# Number of passes to run before admitting defeat
runaway_limit = 20

# Ignore errors by category (one or more of the following, separated by commas: lexing,linting,parsing,templating)
ignore = None

# Warn only for rule codes (one of more rule codes, seperated by commas: e.g. L001,L002)
# Also works for templating and parsing errors by using TMP or PRS
warnings = None

# Ignore linting errors found within sections of code coming directly from
# templated code (e.g. from within Jinja curly braces. Note that it does not
# ignore errors from literal code found within template loops.
ignore_templated_areas = True

# can either be autodetect or a valid encoding e.g. utf-8, utf-8-sig
encoding = autodetect

# Ignore inline overrides (e.g. to test if still required)
disable_noqa = False

# Comma separated list of file extensions to lint
# NB: This config will only apply in the root folder
sql_file_exts = .sql,.sql.j2,.dml,.ddl

# Allow fix to run on files, even if they contain parsing errors
# Note altering this is NOT RECOMMENDED as can corrupt SQL
fix_even_unparsable = False

# CPU processes to use while linting.
# e.g. -1 means use all processors but one. 0  means all cpus.
processes = 0

[sqlfluff:templater]
unwrap_wrapped_queries = True

[sqlfluff:templater:dbt]
project_dir = ./
profiles_dir = ./profiles
profile = hero_software_dbt
target = dev

[sqlfluff:indentation]
# See https://docs.sqlfluff.com/en/stable/layout.html#configuring-indent-locations
tab_space_size = 4
indent_unit = space
indented_joins = False
indented_ctes = True
indented_using_on = True
indented_on_contents = True
template_blocks_indent = True

# Layout configuration
# See https://docs.sqlfluff.com/en/stable/layout.html#configuring-layout-and-spacing
[sqlfluff:layout:type:comma]
spacing_before = touch
line_position = trailing

[sqlfluff:layout:type:binary_operator]
spacing_within = touch
line_position = leading

[sqlfluff:layout:type:statement_terminator]
spacing_before = touch
line_position = trailing

[sqlfluff:layout:type:end_of_file]
spacing_before = touch

[sqlfluff:layout:type:set_operator]
line_position = alone:strict

[sqlfluff:layout:type:start_bracket]
spacing_after = touch

[sqlfluff:layout:type:end_bracket]
spacing_before = touch

[sqlfluff:layout:type:start_square_bracket]
spacing_after = touch

[sqlfluff:layout:type:end_square_bracket]
spacing_before = touch

[sqlfluff:layout:type:casting_operator]
spacing_before = touch
spacing_after = touch

[sqlfluff:layout:type:comparison_operator]
spacing_within = touch
line_position = leading

[sqlfluff:layout:type:assignment_operator]
spacing_within = touch
line_position = leading

[sqlfluff:layout:type:object_reference]
spacing_within = touch:inline

[sqlfluff:layout:type:comment]
spacing_before = any
spacing_after = any

# Template loop tokens shouldn't dictate spacing around them.
[sqlfluff:layout:type:template_loop]
spacing_before = any
spacing_after = any

# Some rules can be configured directly from the config common to other rules
[sqlfluff:rules]
# Max line length is set by default to be in line with the dbt style guide.
# https://github.com/dbt-labs/corp/blob/main/dbt_style_guide.md
allow_scalar = True
single_table_references = consistent
unquoted_identifiers_policy = all

; # Some rules have their own specific config
; [sqlfluff:rules:L003]
; hanging_indents = False

[sqlfluff:rules:capitalisation.keywords]
# Keywords
capitalisation_policy = upper

[sqlfluff:rules:capitalisation.identifiers]
extended_capitalisation_policy = lower
# Apply the rule only to column aliases but not e.g. CTE aliases
unquoted_identifiers_policy = all

[sqlfluff:rules:references.consistent]
# References must be consistently used
# Disabled for some dialects (e.g. bigquery)
force_enable = False
single_table_references = qualified

[sqlfluff:rules:references.keywords]
# Allow to use non-reserved keywords as identifiers when quoted. This is less lax than just disabling L029
quoted_identifiers_policy =  none
unquoted_identifiers_policy = column_aliases
ignore_words = comment,user,source,description,name,state,file,type

[sqlfluff:rules:capitalisation.functions]
# functions
extended_capitalisation_policy = upper

[sqlfluff:rules:convention.select_trailing_comma]
select_clause_trailing_comma = forbid

[sqlfluff:rules:capitalisation.literals]  # Null & Boolean Literals
capitalisation_policy = consistent

[sqlfluff:rules:convention.count_rows]  # Consistent syntax to count all rows
prefer_count_1 = True

[sqlfluff:rules:references.special_chars]  # Special characters in identifiers
unquoted_identifiers_policy = all
quoted_identifiers_policy = all
allow_space_in_identifier = False
additional_allowed_characters = ".-${}"

[sqlfluff:rules:convention.blocked_words]
# Comma separated list of blocked words that should not be used
blocked_words = None

[sqlfluff:rules:capitalisation.types]
# Data Types
extended_capitalisation_policy = upper
# Comma separated list of words to ignore for this rule
ignore_words = None

[sqlfluff:rules:convention.quoted_literals]
# Consistent usage of preferred quotes for quoted literals
preferred_quoted_literal_style = single_quotes
# Disabled for dialects that do not support single and double quotes for quoted literals (e.g. Postgres)

[sqlfluff:rules:layout.long_lines]
# Line length
ignore_comment_lines = True
ignore_comment_clauses = True
